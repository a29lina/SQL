CREATE DATABASE homework_5;

CREATE TABLE cars(
id INT PRIMARY KEY AUTO_INCREMENT,
Name VARCHAR(20) NOT NULL,
Cost INT NOT NULL
);

INSERT INTO cars(name, cost)
VALUES 
('Audi', 52642),
('Mercedes', 57127),
('Skoda', 9000),
('Volvo', 29000),
('Bentley', 35000),
('Citroen',	21000),
('Hummer', 41400),
('Volkswagen', 21600);

SELECT * FROM cars; 

-- 1. Создайте представление, в которое попадут автомобили стоимостью  до 25 000 долларов:

DROP VIEW IF EXISTS auto_cost_under_25000;

CREATE VIEW auto_cost_under_25000 AS
SELECT Name, Cost
FROM cars
WHERE cost < 25000;

SELECT * FROM auto_cost_under_25000;

-- 2. Изменить в существующем представлении порог для стоимости: пусть цена будет до 30 000 долларов:

ALTER VIEW auto_cost_under_25000 AS
SELECT Name, Cost
FROM cars
WHERE cost < 30000;

SELECT * FROM auto_cost_under_25000;

-- 3. 	Создайте представление, в котором будут только автомобили марки “Шкода” и “Ауди”:

DROP VIEW IF EXISTS auto_name; 

CREATE VIEW auto_name AS
SELECT Name, Cost
FROM cars
WHERE Name = 'Skoda' OR Name = 'Audi';

SELECT * FROM auto_name;

/* 4. Добавьте новый столбец под названием «время до следующей станции». 
Чтобы получить это значение, мы вычитаем время станций для пар смежных станций. 
Мы можем вычислить это значение без использования оконной функции SQL, но это может быть очень сложно. 
Проще это сделать с помощью оконной функции LEAD . 
Эта функция сравнивает значения из одной строки со следующей строкой, чтобы получить результат. 
В этом случае функция сравнивает значения в столбце «время» для станции со станцией сразу после нее.
*/

DROP TABLE IF EXISTS Schedule;

CREATE TABLE Schedule(
train_id INT NOT NULL,
station VARCHAR(20) NOT NULL,
station_time TIME NOT NULL);

INSERT INTO Schedule(train_id, station, station_time)
VALUES
(110, 'San Francisco', '10:00:00'),
(110, 'Redwood City', '10:54:00'),
(110, 'Palo Alto', '11:02:00'),
(110, 'Sa Jose', '12:35:00'),
(120, 'San Francisco', '11:00:00'),
(120, 'Palo Alto', '12:49:00'),
(120, 'San Jose', '13:30:00');

SELECT * FROM Schedule;

SELECT train_id, station, station_time,
timediff(LEAD(station_time) OVER(PARTITION BY train_id), station_time)
AS 'time_to_next_station'
FROM Schedule;
