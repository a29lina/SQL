CREATE DATABASE homework_3;
USE homework_3;

DROP TABLE IF EXISTS homework_3_;

CREATE TABLE homework_3_(
id INT PRIMARY KEY AUTO_INCREMENT,
firstname VARCHAR(20) NOT NULL,
lastname VARCHAR(20) NOT NULL,
post VARCHAR(20) NOT NULL,
seniority INT NOT NULL,
salary INT NOT NULL,
age INT NOT NULL
);

INSERT INTO homework_3_(firstname, lastname, post, seniority, salary, age)
VALUES
('Вася', 'Петров', 'Начальник', 40, 100000, 60),
('Петр', 'Власов', 'Начальник', 8, 70000, 30),
('Катя', 'Катина', 'Инженер', 2, 70000, 25),
('Саша', 'Сасин', 'Инженер', 12, 50000, 35),
('Иван', 'Иванов', 'Рабочий', 40, 30000, 59),
('Петр', 'Петров', 'Рабочий', 20, 25000, 40),
('Сидор', 'Сидоров', 'Рабочий', 10, 20000, 35),
('Антон', 'Антонов', 'Рабочий', 8, 19000, 28),
('Юрий', 'Юрков', 'Рабочий', 5, 15000, 25),
('Максим', 'Максимов', 'Рабочий', 2, 11000, 22),
('Юрий', 'Галкин', 'Рабочий', 3, 12000, 24),
('Людмила', 'Маркина', 'Уборщик', 10, 10000, 49);

-- 1. Отсортируйте данные по полю заработная плата (salary) в порядке: убывания: 
SELECT * FROM homework_3_
ORDER BY salary DESC;

-- возрастания:
SELECT * FROM homework_3_
ORDER BY salary;

-- 2. Выведите 5 максимальных заработных плат (saraly):
SELECT * FROM homework_3_
ORDER BY salary DESC
LIMIT 5;

-- 3. Посчитайте суммарную зарплату (salary) по каждой специальности (роst):
SELECT post, SUM(salary) AS 'Суммарная зарплата' FROM homework_3_
GROUP BY post;

-- 4. Найдите кол-во сотрудников с специальностью (post) «Рабочий» в возрасте от 24 до 49 лет включительно:
SELECT post, COUNT(*)  AS 'Количество рабочих'
FROM homework_3_
WHERE post = 'Рабочий' AND age > 23 AND age <50;

-- 5. Найдите количество специальностей:
SELECT COUNT(DISTINCT post) AS 'Количество специальностей'
FROM homework_3_;

-- 6. Выведите специальности, у которых средний возраст сотрудников меньше 30 лет:
SELECT post FROM homework_3_
GROUP BY post
HAVING AVG(age) < 30;
